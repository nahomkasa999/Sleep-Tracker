// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:4x9cP6yBFnK5Gtom@db.cevsovddhtbmfetisski.supabase.co:5432/postgres"
}

model User {
   id          String    @id @default(uuid())
  email       String    @unique
  password    String 
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  sleepEntries SleepEntry[] 
  wellbeingEntries WellbeingEntry[]
}

model SleepEntry {
  id            String    @id @default(uuid())
  userId        String // Foreign key to User
  user          User      @relation(fields: [userId], references: [id])
  bedtime       DateTime
  wakeUpTime    DateTime
  durationHours Float // Store duration in hours for easier charting
  qualityRating Int     @map("sleep_quality_rating") @default(5) @db.SmallInt // 1-10
  comments      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("sleep_entries") // Maps this model to a table named 'sleep_entries' in the DB
}

model WellbeingEntry {
  id          String    @id @default(uuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  entryDate   DateTime  @unique // Ensure only one entry per day per user
  dayRating   Int       @map("day_rating") @default(5) @db.SmallInt // 1-10
  mood        Mood? // e.g., 'Happy', 'Stressed', 'Neutral'
  comments    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("wellbeing_entries")
}

enum Mood {
  Happy
  Stressed
  Neutral
  Sad
  Excited
  Tired
}
